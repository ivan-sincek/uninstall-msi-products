function U ($m, $l) { if ($m -eq "one") { $g = $(Read-Host -Prompt "Enter identifying number").Trim(); Write-Host ""; if ($g.Length -lt 1) { Write-Host "Identifying number is required"; } else { $e = $false; foreach ($p in $l) { if ($p.IdentifyingNumber -eq $g) { $e = $true; break; } } if ($e) { try { Start-Process -FilePath "msiexec.exe" -ArgumentList "/x `"$($g)`"" -NoNewWindow; Write-Host "You should now be able to see an uninstall window..."; } catch { Write-Host $_.Exception; } } else { Write-Host "Product has not been found"; } } } elseif ($m -eq "all") { try { foreach ($p in $l) { Start-Process -FilePath "msiexec.exe" -ArgumentList "/x `"$($p.IdentifyingNumber)`" /qn /norestart" -NoNewWindow; } Write-Host "Uninstallation completed successfully"; } catch { Write-Host $_.Exception; } } } $ps = $null; try { Write-Host "Fetching the list of MSI products, this may take a while..."; $ps = Get-WmiObject -Class Win32_Product; if ($($ps | Measure).Count -lt 1) { Write-Host ""; Write-Host "`n`nNo installed products were found"; } else { $ps | Sort-Object -Property Vendor, Name, Version | Format-List -Property IdentifyingNumber, Name, Version, Vendor, LocalPackage, PackageName; Write-Host "[1] [Prompt] Uninstall One `n[2] [Silent] Uninstall All `n---------------------------"; $c = $(Read-Host -Prompt "Your choice").Trim(); Write-Host ""; if ($c -eq "1") { U -M "one" -L $ps; } elseif ($c -eq "2") { $cf = $(Read-Host -Prompt "Confirm (yes)").Trim(); if ($cf -eq "yes") { Write-Host ""; U -M "all" -L $ps; } } else { Write-Host "Invalid choice"; } } } catch { Write-Host $_.Exception.InnerException.Message; } finally { if ($ps -ne $null) { $ps.Dispose(); } }
